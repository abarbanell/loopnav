{"changed":true,"filter":false,"title":"cached_api.js","tooltip":"/util/cached_api.js","value":"\nvar cached_api = function() {\n\n  var api = require('./api');\n  var logger = require('./logger');\n  var cacheHit = 0;\n  var cacheMiss = 0;\n  var cacheExpiry = process.env.CACHE_EXPIRY || 60*60*24*7*1000; // in milliseconds, equals 7 days\n\n  // get data from API call\n  var get = function(options, callback) {\n    var cached_callback = function(err, result) {\n      logger.info('cached_api.cached_callback');\n      if (err) {\n        logger.error('cached_api.cached_callback err:' + JSON.stringify(err));\n        return callback(err, result);\n      }\n      logger.info('cached_api.cached_callback payload:' + result);\n      var d = new Date();\n      var jsondate = d.toJSON();\n      db.apicache.insert({\n        url: options,\n        payload: result,\n        retrieved: jsondate,\n      }, function(err) {\n        logger.info('apicache insert - err: ' + err);\n        callback(err,result);\n      });\n    }\n    logger.info('cached_api.get: ' + options);\n    \n    if (options === options.toString()) {\n      db.apicache.findOne({url: options}, function(err, cachedApi) {\n        if (err) {\n          logger.error('apicache.get CACHE ERROR: ' + err);\n          return api.get(options, cached_callback);\n        }\n        if (!cachedApi) {\n          cacheMiss++;\n          logger.info('apicache.get: CACHE MISS ' + cacheMiss);\n          return api.get(options, cached_callback);\n        } else {\n          var now = new Date();\n          var apidate = new Date(cachedApi.retrieved);\n          logger.info('now: ' + now);\n          logger.info('apidate: ' + apidate);\n          logger.info('expiry' + cacheExpiry);\n          logger.info('cache age: ' + (now - apidate));\n          if (cachedApi.retrieved && ((now-apidate) < cacheExpiry)) {\n            cacheHit++;\n            logger.info('cached_api.get: CACHE HIT ' + cacheHit);\n            return callback(null, cachedApi.payload);\n          } else {\n            logger.info('cached_api.get: expired or no retrieve date set');\n            return api.get(options, cached_callback);\n          }\n        }\n      }); \n    } else {\n      logger.info('cached_api.get: CACHE BYPASS');\n      return api.get(options, callback);\n    }\n  };\n\n\tvar post = function(options, callback) {\n    logger.info('cached_api.post: ' + options);\n\t\tapi.post(options, callback);\n\t};\n\n  // need to return this after db connection is established\n\tvar lrc = { \n\t\tget: get,\n\t\tpost: post\n\t};\n\n\n  // connect to DB\n  var db = require('./db.js')(function(err, result){\n    if (err) {\n      logger.error('cached_api - could not open db: ' + err);\n    } else {\n      db.bind('apicache');\n      db.collection('apicache').ensureIndex([['url', 1]], \n        true, function(err, replies){\n          if (err) {\n            logger.error('db.apicache.ensureIndex error: ' + err);\n          } else {\n            return (null, lrc);\n          }\n      });\n    } \n  });\n\n\n}();\n\nmodule.exports = cached_api;\n","undoManager":{"mark":99,"position":100,"stack":[[{"group":"doc","deltas":[{"start":{"row":19,"column":17},"end":{"row":19,"column":18},"action":"insert","lines":["{"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":18},"end":{"row":21,"column":11},"action":"insert","lines":["","            ","          }"]}]}],[{"group":"doc","deltas":[{"start":{"row":20,"column":12},"end":{"row":20,"column":13},"action":"insert","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":20,"column":13},"end":{"row":20,"column":14},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":20,"column":14},"end":{"row":20,"column":15},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":20,"column":15},"end":{"row":20,"column":16},"action":"insert","lines":["u"]}]}],[{"group":"doc","deltas":[{"start":{"row":20,"column":16},"end":{"row":20,"column":17},"action":"insert","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":20,"column":17},"end":{"row":20,"column":18},"action":"insert","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":20,"column":18},"end":{"row":20,"column":19},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":20,"column":19},"end":{"row":20,"column":21},"action":"insert","lines":["()"]}]}],[{"group":"doc","deltas":[{"start":{"row":20,"column":20},"end":{"row":20,"column":21},"action":"insert","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":20,"column":21},"end":{"row":20,"column":22},"action":"insert","lines":["u"]}]}],[{"group":"doc","deltas":[{"start":{"row":20,"column":22},"end":{"row":20,"column":23},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":20,"column":23},"end":{"row":20,"column":24},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":20,"column":24},"end":{"row":20,"column":25},"action":"insert","lines":[","]}]}],[{"group":"doc","deltas":[{"start":{"row":20,"column":25},"end":{"row":20,"column":26},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":20,"column":26},"end":{"row":20,"column":27},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":20,"column":27},"end":{"row":20,"column":28},"action":"insert","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":20,"column":28},"end":{"row":20,"column":29},"action":"insert","lines":["c"]}]}],[{"group":"doc","deltas":[{"start":{"row":20,"column":30},"end":{"row":20,"column":31},"action":"insert","lines":[";"]}]}],[{"group":"doc","deltas":[{"start":{"row":25,"column":0},"end":{"row":29,"column":0},"action":"remove","lines":["  //TODO - need to exit until we fix this....","  logger.error('TODO: need to make cached_api async');","  process.exit();","",""]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":0},"end":{"row":92,"column":0},"action":"remove","lines":["  // get data from API call","  var get = function(options, callback) {","    var cached_callback = function(err, result) {","      logger.info('cached_api.cached_callback');","      if (err) {","        logger.error('cached_api.cached_callback err:' + JSON.stringify(err));","        return callback(err, result);","      }","      logger.info('cached_api.cached_callback payload:' + result);","      var d = new Date();","      var jsondate = d.toJSON();","      db.apicache.insert({","        url: options,","        payload: result,","        retrieved: jsondate,","      }, function(err) {","        logger.info('apicache insert - err: ' + err);","        callback(err,result);","      });","    }","    logger.info('cached_api.get: ' + options);","    ","    if (options === options.toString()) {","      db.apicache.findOne({url: options}, function(err, cachedApi) {","        if (err) {","          logger.error('apicache.get CACHE ERROR: ' + err);","          return api.get(options, cached_callback);","        }","        if (!cachedApi) {","          cacheMiss++;","          logger.info('apicache.get: CACHE MISS ' + cacheMiss);","          return api.get(options, cached_callback);","        } else {","          var now = new Date();","          var apidate = new Date(cachedApi.retrieved);","          logger.info('now: ' + now);","          logger.info('apidate: ' + apidate);","          logger.info('expiry' + cacheExpiry);","          logger.info('cache age: ' + (now - apidate));","          if (cachedApi.retrieved && ((now-apidate) < cacheExpiry)) {","            cacheHit++;","            logger.info('cached_api.get: CACHE HIT ' + cacheHit);","            return callback(null, cachedApi.payload);","          } else {","            logger.info('cached_api.get: expired or no retrieve date set');","            return api.get(options, cached_callback);","          }","        }","      }); ","    } else {","      logger.info('cached_api.get: CACHE BYPASS');","      return api.get(options, callback);","    }","  };","","\tvar post = function(options, callback) {","    logger.info('cached_api.post: ' + options);","\t\tapi.post(options, callback);","\t}","","\treturn {","\t\tget: get,","\t\tpost: post","\t}",""]}]}],[{"group":"doc","deltas":[{"start":{"row":8,"column":0},"end":{"row":9,"column":0},"action":"insert","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":8,"column":0},"end":{"row":9,"column":0},"action":"insert","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":9,"column":0},"end":{"row":73,"column":0},"action":"insert","lines":["  // get data from API call","  var get = function(options, callback) {","    var cached_callback = function(err, result) {","      logger.info('cached_api.cached_callback');","      if (err) {","        logger.error('cached_api.cached_callback err:' + JSON.stringify(err));","        return callback(err, result);","      }","      logger.info('cached_api.cached_callback payload:' + result);","      var d = new Date();","      var jsondate = d.toJSON();","      db.apicache.insert({","        url: options,","        payload: result,","        retrieved: jsondate,","      }, function(err) {","        logger.info('apicache insert - err: ' + err);","        callback(err,result);","      });","    }","    logger.info('cached_api.get: ' + options);","    ","    if (options === options.toString()) {","      db.apicache.findOne({url: options}, function(err, cachedApi) {","        if (err) {","          logger.error('apicache.get CACHE ERROR: ' + err);","          return api.get(options, cached_callback);","        }","        if (!cachedApi) {","          cacheMiss++;","          logger.info('apicache.get: CACHE MISS ' + cacheMiss);","          return api.get(options, cached_callback);","        } else {","          var now = new Date();","          var apidate = new Date(cachedApi.retrieved);","          logger.info('now: ' + now);","          logger.info('apidate: ' + apidate);","          logger.info('expiry' + cacheExpiry);","          logger.info('cache age: ' + (now - apidate));","          if (cachedApi.retrieved && ((now-apidate) < cacheExpiry)) {","            cacheHit++;","            logger.info('cached_api.get: CACHE HIT ' + cacheHit);","            return callback(null, cachedApi.payload);","          } else {","            logger.info('cached_api.get: expired or no retrieve date set');","            return api.get(options, cached_callback);","          }","        }","      }); ","    } else {","      logger.info('cached_api.get: CACHE BYPASS');","      return api.get(options, callback);","    }","  };","","\tvar post = function(options, callback) {","    logger.info('cached_api.post: ' + options);","\t\tapi.post(options, callback);","\t}","","\treturn {","\t\tget: get,","\t\tpost: post","\t}",""]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":1},"end":{"row":69,"column":7},"action":"remove","lines":["return"]},{"start":{"row":69,"column":1},"end":{"row":69,"column":2},"action":"insert","lines":["v"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":2},"end":{"row":69,"column":3},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":3},"end":{"row":69,"column":4},"action":"insert","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":4},"end":{"row":69,"column":5},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":5},"end":{"row":69,"column":6},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":6},"end":{"row":69,"column":7},"action":"insert","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":7},"end":{"row":69,"column":8},"action":"insert","lines":["c"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":10},"end":{"row":69,"column":11},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":68,"column":0},"end":{"row":69,"column":0},"action":"insert","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":0},"end":{"row":69,"column":2},"action":"insert","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":2},"end":{"row":69,"column":3},"action":"insert","lines":["/"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":3},"end":{"row":69,"column":4},"action":"insert","lines":["/"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":4},"end":{"row":69,"column":5},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":5},"end":{"row":69,"column":6},"action":"insert","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":6},"end":{"row":69,"column":7},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":7},"end":{"row":69,"column":8},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":8},"end":{"row":69,"column":9},"action":"insert","lines":["d"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":9},"end":{"row":69,"column":10},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":10},"end":{"row":69,"column":11},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":11},"end":{"row":69,"column":12},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":12},"end":{"row":69,"column":13},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":13},"end":{"row":69,"column":14},"action":"insert","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":14},"end":{"row":69,"column":15},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":15},"end":{"row":69,"column":16},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":16},"end":{"row":69,"column":17},"action":"insert","lines":["u"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":17},"end":{"row":69,"column":18},"action":"insert","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":18},"end":{"row":69,"column":19},"action":"insert","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":19},"end":{"row":69,"column":20},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":20},"end":{"row":69,"column":21},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":21},"end":{"row":69,"column":22},"action":"insert","lines":["h"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":22},"end":{"row":69,"column":23},"action":"insert","lines":["i"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":23},"end":{"row":69,"column":24},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":24},"end":{"row":69,"column":25},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":25},"end":{"row":69,"column":26},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":26},"end":{"row":69,"column":27},"action":"insert","lines":["f"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":27},"end":{"row":69,"column":28},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":28},"end":{"row":69,"column":29},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":29},"end":{"row":69,"column":30},"action":"insert","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":30},"end":{"row":69,"column":31},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":31},"end":{"row":69,"column":32},"action":"insert","lines":["d"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":32},"end":{"row":69,"column":33},"action":"insert","lines":["b"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":33},"end":{"row":69,"column":34},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":34},"end":{"row":69,"column":35},"action":"insert","lines":["c"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":35},"end":{"row":69,"column":36},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":36},"end":{"row":69,"column":37},"action":"insert","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":37},"end":{"row":69,"column":38},"action":"insert","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":38},"end":{"row":69,"column":39},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":39},"end":{"row":69,"column":40},"action":"insert","lines":["c"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":40},"end":{"row":69,"column":41},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":41},"end":{"row":69,"column":42},"action":"insert","lines":["i"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":42},"end":{"row":69,"column":43},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":43},"end":{"row":69,"column":44},"action":"insert","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":44},"end":{"row":69,"column":45},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":45},"end":{"row":69,"column":46},"action":"insert","lines":["i"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":46},"end":{"row":69,"column":47},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":47},"end":{"row":69,"column":48},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":48},"end":{"row":69,"column":49},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":49},"end":{"row":69,"column":50},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":50},"end":{"row":69,"column":51},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":51},"end":{"row":69,"column":52},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":52},"end":{"row":69,"column":53},"action":"insert","lines":["b"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":53},"end":{"row":69,"column":54},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":54},"end":{"row":69,"column":55},"action":"insert","lines":["i"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":55},"end":{"row":69,"column":56},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":56},"end":{"row":69,"column":57},"action":"insert","lines":["h"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":57},"end":{"row":69,"column":58},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":58},"end":{"row":69,"column":59},"action":"insert","lines":["d"]}]}],[{"group":"doc","deltas":[{"start":{"row":70,"column":9},"end":{"row":70,"column":10},"action":"insert","lines":["="]}]}],[{"group":"doc","deltas":[{"start":{"row":70,"column":10},"end":{"row":70,"column":11},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":67,"column":2},"end":{"row":67,"column":3},"action":"insert","lines":[";"]}]}],[{"group":"doc","deltas":[{"start":{"row":73,"column":2},"end":{"row":73,"column":3},"action":"insert","lines":[";"]}]}],[{"group":"doc","deltas":[{"start":{"row":93,"column":0},"end":{"row":94,"column":0},"action":"remove","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":92,"column":0},"end":{"row":93,"column":0},"action":"remove","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":94,"column":2},"end":{"row":94,"column":3},"action":"remove","lines":[")"]}]}],[{"group":"doc","deltas":[{"start":{"row":94,"column":1},"end":{"row":94,"column":2},"action":"remove","lines":["("]}]}],[{"group":"doc","deltas":[{"start":{"row":94,"column":1},"end":{"row":94,"column":3},"action":"insert","lines":["()"]}]}]]},"ace":{"folds":[],"scrolltop":840,"scrollleft":0,"selection":{"start":{"row":94,"column":3},"end":{"row":94,"column":3},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1423558401605}